算法班第六节课

机器学习  by  张巍-中科院

人脸检测/识别
    戴帽子，遮挡。。。传统算法不可行
    如果算法有学习能力呢？

股票预测：
    世间万物貌似都和股票价格有关。。。
    给全数据集，看看哪些和股票价格有关

个性化推荐
    需要前期标注。（自己也不会描述自己喜欢哪些东西）


共性：
    描述困难
    数据获取很容易


数据看成（x1,y1）...(xn,yn)

目标函数：y=f(x)

函数空间搜索
    函数空间太大，同样可能找到的函数和目标函数不一致。
    函数空间太小，可能找到的目标函数和真正的函数太远（由于数据集合有限）
    

拟合。
    欠拟合。
    曲线拟合。
        假设空间： n次函数。
                损失函数：最小二乘法。绝对值的和。


分类：
    假设空间 f(x,w) = sign(w^t*x)



上面都叫监督学习：
    回归
    分类

非监督学习：
    只有x：聚类，谷歌神经网络实验
    强化学习：教机器人走路。延迟反馈，监督和非监督之间。

字符串处理中的两个问题 -- 地质研究院邹伟

最长公共子序列：
    ABCDEFG=> ABDG(删除 CEF)ABDG是子序列。
    穷举法。2^m*2^n.
    二维数组，找出长度。根据二维数组，找出最长子序列。
    注意这里的最长公共子序列是个集合。
    求所有的最长公共子序列。lcs（xi,yj+1）和lcs（xi+1,yj）相等。


最长递增子序列：
    首先排序得到另外一个子序列
    求新的的子序列和原序列的最长公共子序列。

最长回文串：
    线性时间算法：manacher算法。
    利用之前已经生成的p[j]，保存以求得的所max。


曹鹏博士：
    贪心和动态规划。
    
    贪心应用：
        最小生成树
        djkstra
        huffman
        lru缓存
        使用贪心给出近似解。


    例题1： 找钱问题，1，2，5，10换钱。钱币数目最小。可以贪心
            如果是：1，5，7还钱，不可以贪心。

    例题2： i个活动，[si,fi]安排最多活动。
        按照结束时间排序。选择最早结束。
        其他策略。

    例题3：船上集装箱。
        按体积排序，体积小优先放入集装箱。

    例题4：部分背包问题：
        性价比由大到小排序。和0-1背包问题比较（dp）

    例题5：独木舟n个人。



    证明：替换。


    动态规划：dynamic programming
        关键在于状态的定义和方案枚举。

        1：旅行商问题：全排列？找出所有代价，找出最小？可以剪枝
            状态定义：已经经过的节点集合s和当前节点d=》[s,d]。
        2：一般找零钱问题：面值为c1,c2,c3..cn，输入钱m，给出方法，钱币个数最少。
            greedy set
        3：把一个单词删改变成另外一个单词的最少操作次数。

        dp就是打印一个表
        4：lcs
        5：leetcode interleaving string。判断一个字符串是不是其余两个字符串穿插而成。
            dp，
        6：lis：最长单调子序列。
        7： dp[0]=1
            dp[x]={dp[y]|y<x,ay<ax}+1
            最终:max{dp[i]}i=0,,,n
        8：0-1背包问题：
        9：多个矩阵相乘，加括号。
        10：凸三角形。和矩阵加括号类似。
        11：取数版本1
        12：取数版本2.每一列是一个阶段（状态）
        13：格子取数：minimum path.
        14: 不同的步数不可能相交。
        15:带权活动安排。
        16：最大子数组
        17：来回走，百度之星题目。

        树形dp
        插头dp。
        如果i之和i-1有关，可以省掉一维，背包，lcs，lis
        lis nlogn算法
        先排序，再dp。

        状态表示： object，复杂！！！
        一维： 找零钱，lis，斐波那契数列，上台阶
        高维（序列问题）：lcs，编辑距离，0-1背包
            矩阵乘法结合律[i,j]=[i,k]+[k,j],k=i+1,,,j-1
            格子取数。
        记录中间经过节点：引入集合2^n
            tsp问题。
        树形dp：最优二叉搜索树（）

        贪心和dp

        贪心证明比较困难

        一个dp状态应该是一些解得等价类。
        贪心的图一般是树状图，dp的图网状图。

        基于统计的算法比基于规则的算法好。
        bloom-filer，






1： 2^n tsp
2:  [i][j] lcs,0-1背包，
3： [i] lis
4:  [i,j]=> [i,k],[k,j],矩阵乘法，括号。


